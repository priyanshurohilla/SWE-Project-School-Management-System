/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
/**
 *
 * @author priya
 */
public class CreateTimetableUI extends javax.swing.JFrame {

    /**
     * Creates new form CreateTimetable
     */
    private TimetableManager obj;
    public CreateTimetableUI(TimetableManager mg) {
        initComponents();
        this.obj = mg;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblCreateTimetable = new javax.swing.JLabel();
        btnTeacher = new javax.swing.JButton();
        btnStudent = new javax.swing.JButton();
        lblTeacherIDOrClass = new javax.swing.JLabel();
        txtUserInput = new javax.swing.JTextField();
        btnOpen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnCreateNew = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Priyanshu Rohilla A-67");
        setBackground(new java.awt.Color(255, 255, 102));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dfds(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(104, 104, 104));

        lblCreateTimetable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCreateTimetable.setForeground(new java.awt.Color(255, 255, 255));
        lblCreateTimetable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateTimetable.setText("CREATE TIMETABLE");
        lblCreateTimetable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        btnTeacher.setText("TEACHER");
        btnTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherActionPerformed(evt);
            }
        });

        btnStudent.setText("STUDENT");
        btnStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStudentMouseClicked(evt);
            }
        });
        btnStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentActionPerformed(evt);
            }
        });

        lblTeacherIDOrClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTeacherIDOrClass.setForeground(new java.awt.Color(255, 255, 255));
        lblTeacherIDOrClass.setText("TeacherID:");

        txtUserInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserInputActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOpenMouseClicked(evt);
            }
        });
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Period 1", "Period 2", "Period 3", "Period 4", "", "Period 5", "Period 6", "Period 7", "Period 8"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        btnSave.setText("Save");
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCreateNew.setText("Create New");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(lblCreateTimetable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTeacherIDOrClass)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCreateNew)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(296, 296, 296))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCreateTimetable, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTeacher)
                    .addComponent(btnStudent))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeacherIDOrClass)
                    .addComponent(txtUserInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpen)
                    .addComponent(btnCreateNew))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
int Flagchecker=0;


String teacherid_Class = "";
String Class;
String path = "teachers.csv";

    private void btnStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentActionPerformed
        // TODO add your handling code here:
        Flagchecker =1;
        lblTeacherIDOrClass.setText("Class");
        ClearTableModel();
        txtUserInput.setText("");
        String file = "student timetable.csv";
        obj.init(file);
        
    }//GEN-LAST:event_btnStudentActionPerformed

    private void btnOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOpenMouseClicked
   public DefaultTableModel model;

    private void ClearTableModel() {
    model = (DefaultTableModel)jTable1.getModel();
        while(model.getRowCount() > 0)
        {
            model.removeRow(0);
        }
}
public void showMessage(String msg){
    JOptionPane.showMessageDialog(CreateTimetableUI.this, msg);
}
    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        String[][] arr = new String[6][10];
        String[] row = new String[10];
        int i=0;
        if( txtUserInput.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(CreateTimetableUI.this, "Empty Field");
        }
        else{
        
        teacherid_Class = txtUserInput.getText().trim();
        
        path = "Teachers.csv";
        if(Flagchecker==1)
            path = "class database.csv";
            
        String line = "";
        ClearTableModel();
        int flag = 0;
        try{
            BufferedReader br = new BufferedReader(new FileReader(path));
           Object[] lines = br.lines().toArray();
            while(i<lines.length){
                String[] rows = lines[i].toString().split(",");
                if(teacherid_Class.equals(rows[7])){
                    flag=1;
                    break;
                }
                i++;
            }
            if(flag ==1){
                
                Timetable dat= obj.open(teacherid_Class);
                String f = dat.getteacherid_class();
                System.out.println(f);
                arr=dat.gettimetable();
                //System.out.println(Arrays.deepToString(arr));
                for( i=0;i<6;i++){
                    for(int j=0;j<10;j++){
                       row[j]=arr[i][j]; 
                    }
                model.addRow(row);
                }
                }
            
            else{
                JOptionPane.showMessageDialog(CreateTimetableUI.this, "Record not found");
            }
        } catch( FileNotFoundException e) {
            e.printStackTrace();
            
        } catch (IOException e) {
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherActionPerformed
        // TODO add your handling code here:
        Flagchecker=0;
        ClearTableModel();
        lblTeacherIDOrClass.setText("TeacherID:");
        txtUserInput.setText((""));
        String file="teacher timetable.csv";
        obj.init(file);

    }//GEN-LAST:event_btnTeacherActionPerformed

    private void btnStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStudentMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStudentMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        jTable1.getCellEditor().stopCellEditing();
        String[][] savedata = new String[6][10];
        
        
        if( txtUserInput.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(CreateTimetableUI.this, "Invalid Save");
        }
        else{
            teacherid_Class = txtUserInput.getText().trim();
            
            File file = new File("teacher timetable.csv");
            if(Flagchecker==1)
                file= new File("student timetable.csv");
            
            
                //BufferedWriter bw = new BufferedWriter(new FileWriter(file,false));
                for(int i=0;i<jTable1.getRowCount();i++){
                    for(int j=0;j<jTable1.getColumnCount();j++){
                        
                        savedata[i][j]=jTable1.getValueAt(i,j).toString();
                    }
                    
                }
               Timetable sdata= new Timetable(savedata,teacherid_Class);
                if(obj.save(sdata,file))
                {ClearTableModel();
                    JOptionPane.showMessageDialog(CreateTimetableUI.this, "Saved Successfully");
                }
                else
                    JOptionPane.showMessageDialog(CreateTimetableUI.this, "Save failed");
            
            
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtUserInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserInputActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        // TODO add your handling code here:
       
        CreateNew_TeacherTimeTableUI crtnwt= new CreateNew_TeacherTimeTableUI(Flagchecker,obj);
        crtnwt.setVisible(true);
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void dfds(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dfds
        // TODO add your handling code here:
       this.setVisible(false);
       AdminUI q = new AdminUI();
       q.setVisible(true);
    }//GEN-LAST:event_dfds

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
//        this.setVisible(false);
//        AdminUI q = new AdminUI();
//        q.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public void runn(TimetableManager r) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTimetableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTimetableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTimetableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTimetableUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateTimetableUI p = new CreateTimetableUI(r);
                p.setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnStudent;
    private javax.swing.JButton btnTeacher;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lblCreateTimetable;
    private javax.swing.JLabel lblTeacherIDOrClass;
    private javax.swing.JTextField txtUserInput;
    // End of variables declaration//GEN-END:variables
}
